<?php
/**
 * Created by PhpStorm.
 * User: fugui
 * Date: 2018/8/16
 * Time: 12:15
 */

namespace app\api\controller;


class Scheduling extends Base
{

    //父类的初始化方法
//    protected  function _initialize()
//    {
//        parent::_initialize(); // TODO: Change the autogenerated stub
//    }

    //api 入口
    public function insert_scheduling()
    {
        //获取验证成功，过滤后的参数
        $paramArr = $this->filterParamArr;//base类的属性
        dump($paramArr);
    }

    //重新token验证规则
    public function check_token($arr)
    {
        //先判断是否存在token
        if (!isset($arr['token']) || empty($arr['token'])) {
            $this->return_msg('4003', '缺少token参数');
        }
        //验证token
        $client_token = $arr['token'];
        //验证规则
        $server_token = md5('kangquan'.md5($arr['time']).'kangquan');

        if ($client_token !== $server_token) {
            $this->return_msg('4004', 'token不正确');
        }
    }

    //重新过滤参数规则
    public function filter_param($arr)
    {
        unset($arr['time'], $arr['token']);
        //判断data是不是array
        if(!is_array($arr['data'])){
            $this->return_msg('4001','data参数错误，不是数组类型');
        }
        //判断data里的内容是不是array
        foreach ($arr['data'] as $value){
            if(is_array($value)){
                //验证每条信息
               return $this->check_info($value);
            }else{
                $this->return_msg('4002','data里面内容错误，内容必须全部是数组类型');
            }
        }

    }

    //验证盘班表的每条信息
    public function check_info($arr)
    {
        $valid_ScheInfo = \think\Loader::validate('Docter_scheduling');
        if($valid_ScheInfo->check($arr)){
            return $arr;
        }else{
            $this->return_msg('4003','数据不符合规范');
        }
    }

}